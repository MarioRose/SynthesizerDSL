/*
 * generated by Xtext 2.12.0
 */
package org.xtext.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SynthesizerGenerator extends AbstractGenerator {

//	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
//	}
	
	
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		
	// Generate Main Java Class
	fsa.generateFile('Main.java', '
		import java.io.BufferedReader;
		import java.io.IOException;
		import java.io.InputStreamReader;
		import java.util.Scanner; 
		import java.awt.event.ActionEvent;
		import java.awt.event.ActionListener;

		import javax.swing.*;  

		import com.jsyn.JSyn;
		import com.jsyn.Synthesizer;
		import com.jsyn.unitgen.LineOut;
		import com.jsyn.unitgen.SineOscillator;
		import com.jsyn.unitgen.UnitOscillator;


		public class Main {

			public static void main(String[] args) {
				System.out.println("Synthesizer started!");
				
				javax.swing.SwingUtilities.invokeLater(new Runnable() {
					public void run() {
						createAndShowGUI();
				    }
				});
			}

			
			private static void createAndShowGUI() {
		        //Create and set up the window.
		        JFrame frame = new JFrame("HelloWorldSwing");
		        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		        //Add the ubiquitous "Hello World" label.
		        JLabel label = new JLabel("Hello World");
		        frame.getContentPane().add(label);
		        
		        //Button...
		        JButton b1 = new JButton("TestButton");
		        b1.addActionListener(new ActionListener() {
		            @Override
		            public void actionPerformed(ActionEvent e) {
		                //your actions
		            	System.out.println("TEST");
		            	
		            	Synthesizer synth;
		                UnitOscillator osc;
		                LineOut lineOut;
		            	
		            	// Create a context for the synthesizer.
		                synth = JSyn.createSynthesizer();
		
		                // Start synthesizer using default stereo output at 44100 Hz.
		                synth.start();
		
		                // Add a tone generator.
		                synth.add(osc = new SineOscillator());
		                // Add a stereo audio output unit.
		                synth.add(lineOut = new LineOut());
		
		                // Connect the oscillator to both channels of the output.
		                osc.output.connect(0, lineOut.input, 0);
		                osc.output.connect(0, lineOut.input, 1);
		
		                // Set the frequency and amplitude for the sine wave.
		                osc.frequency.set(545.0);
		                osc.amplitude.set(0.6);
		
		                // We only need to start the LineOut. It will pull data from the
		                // oscillator.
		                lineOut.start();
		
		                System.out.println("You should now be hearing a sine wave. ---------");
		
		                // Sleep while the sound is generated in the background.
		                try {
		                    double time = synth.getCurrentTime();
		                    System.out.println("time = " + time);
		                    // Sleep for a few seconds.
		                    synth.sleepUntil(time + 1.0);
		                } catch (InterruptedException ex) {
		                    ex.printStackTrace();
		                }
		
		                System.out.println("Stop playing. -------------------");
		                // Stop everything.
		                synth.stop();
		            }
		        });
		        frame.getContentPane().add(b1);
		
		        //Display the window.
		        frame.pack();
		        frame.setVisible(true);
		    }

		}' )
		
	}
		
		
}
