/*
 * generated by Xtext 2.12.0
 */
package org.xtext.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.ide.contentassist.antlr.internal.InternalSynthesizerParser;
import org.xtext.services.SynthesizerGrammarAccess;

public class SynthesizerParser extends AbstractContentAssistParser {

	@Inject
	private SynthesizerGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSynthesizerParser createParser() {
		InternalSynthesizerParser result = new InternalSynthesizerParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getControlElementAccess().getAlternatives(), "rule__ControlElement__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
					put(grammarAccess.getModelAccess().getControlsAssignment_1(), "rule__Model__ControlsAssignment_1");
					put(grammarAccess.getButtonAccess().getNameAssignment_1(), "rule__Button__NameAssignment_1");
					put(grammarAccess.getButtonAccess().getXAssignment_4(), "rule__Button__XAssignment_4");
					put(grammarAccess.getButtonAccess().getYAssignment_6(), "rule__Button__YAssignment_6");
					put(grammarAccess.getButtonAccess().getWidthAssignment_8(), "rule__Button__WidthAssignment_8");
					put(grammarAccess.getButtonAccess().getHeightAssignment_10(), "rule__Button__HeightAssignment_10");
					put(grammarAccess.getButtonAccess().getFrequencyAssignment_12(), "rule__Button__FrequencyAssignment_12");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SynthesizerGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SynthesizerGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
